const _0x492482 = _0x7822; (function (_0x2dbd0b, _0x5e0a1e) { const _0x568d87 = _0x7822, _0x1839af = _0x2dbd0b(); while (!![]) { try { const _0x3ea75d = -parseInt(_0x568d87(0x10c)) / 0x1 + parseInt(_0x568d87(0xff)) / 0x2 + -parseInt(_0x568d87(0xd2)) / 0x3 * (-parseInt(_0x568d87(0xe1)) / 0x4) + parseInt(_0x568d87(0xf3)) / 0x5 * (parseInt(_0x568d87(0xef)) / 0x6) + -parseInt(_0x568d87(0x103)) / 0x7 * (parseInt(_0x568d87(0x106)) / 0x8) + parseInt(_0x568d87(0xcd)) / 0x9 + -parseInt(_0x568d87(0xc9)) / 0xa; if (_0x3ea75d === _0x5e0a1e) break; else _0x1839af['push'](_0x1839af['shift']()); } catch (_0xa81b65) { _0x1839af['push'](_0x1839af['shift']()); } } }(_0x3754, 0x65815)); const fs = require('fs'), readlineSync = require('readline-sync'), puppeteer = require(_0x492482(0xec))[_0x492482(0xe0)], StealthPlugin = require('puppeteer-extra-plugin-stealth'), moment = require(_0x492482(0xc8))['tz'][_0x492482(0xd3)](_0x492482(0xdc)), { sleep, color, randomUA } = require(_0x492482(0x112)); function _0x3754() { const _0x3687ce = ['goto', '4661512YITEZZ', 'defaultBrowserContext', '[*]\x20Launching\x20browser', 'clearPermissionOverrides', '#opt-code', 'overridePermissions', '774821xwPYuw', 'button[class=\x22btn-full-width\x20btn-grivy\x20redeem-btn\x20mat-focus-indicator\x20mat-raised-button\x20mat-button-base\x22]', '[*]\x20Success.', '--window-size=1920,1080', 'geolocation', 'format', './util/function', '[*]\x20Sending\x20OTP...', 'moment-timezone', '4175580KkqRku', '.jpg', 'waitForSelector', 'click', '2300247BbkAqr', '----------------------------------------', 'body\x20>\x20app-root\x20>\x20div\x20>\x20app-campaign\x20>\x20div\x20>\x20div.bottom-box\x20>\x20button', 'clear', '[*]\x20Opening\x20Promo\x20page', '792417McMRyS', 'setDefault', 'existsSync', 'Page\x20Loaded', '#cdk-overlay-0\x20>\x20mat-dialog-container\x20>\x20app-permission-dialog\x20>\x20div\x20>\x20div\x20>\x20button[class=\x22btn-full-width\x20btn-cancel\x20mat-focus-indicator\x20mat-raised-button\x20mat-button-base\x22]', '[*]\x20OTP\x20:\x20', 'blue', 'readdirSync', 'red', 'question', 'Asia/Jakarta', 'waitForTimeout', '#mat-dialog-3\x20>\x20app-bar-code\x20>\x20div\x20>\x20div.mat-dialog-content\x20>\x20app-code\x20>\x20div\x20>\x20div:nth-child(3)\x20>\x20div\x20>\x20app-barcode\x20>\x20div', 'close', 'default', '8fzpYjn', '#cdk-overlay-0', 'cyan', 'newPage', 'button.login-button.btn-grivy.mat-focus-indicator.mat-raised-button.mat-button-base', 'then', 'setViewport', 'length', 'utf-8', 'div[class=\x22confirm-item\x20margin-right-minus-10\x22]\x20>\x20button', 'https://grivy.app/', 'puppeteer-extra', 'load', 'launch', '102rvvIgX', '[*]\x20Created\x20by\x20masgimenz', './src/browserPath.txt', 'screenshot', '214045YSHZau', 'yellow', '#mat-dialog-0\x20>\x20app-redeem-checkbox-dialog\x20>\x20div\x20>\x20div:nth-child(1)\x20>\x20label\x20>\x20span.checkmark', '#cdk-overlay-1', '[*]\x20Browser\x20path\x20not\x20found.\x20please\x20put\x20browser\x20path\x20at\x20./src/browserPath.txt', '--disable-gpu', 'DD/MM/YY\x20HH:mm:ss', 'catch', '[*]\x20Browser\x20Launched', 'setUserAgent', 'type', 'readFileSync', '1358438RtGDAX', '#cdk-overlay-0\x20>\x20mat-dialog-container\x20>\x20app-cookie-management\x20>\x20div\x20>\x20div\x20>\x20div\x20>\x20button[class=\x22mat-primary\x20btn-full-width\x20btn-grivy\x20mat-focus-indicator\x20mat-raised-button\x20mat-button-base\x22]', '--------------------------------------------', 'log', '7oLrKJl', '[*]\x20NO\x20HP\x20:\x20']; _0x3754 = function () { return _0x3687ce; }; return _0x3754(); } puppeteer['use'](StealthPlugin()); var dir = './result'; function _0x7822(_0x58aa5b, _0xcaddc4) { const _0x375466 = _0x3754(); return _0x7822 = function (_0x7822e8, _0x1a1163) { _0x7822e8 = _0x7822e8 - 0xc7; let _0x326846 = _0x375466[_0x7822e8]; return _0x326846; }, _0x7822(_0x58aa5b, _0xcaddc4); } fs[_0x492482(0xd4)](dir) ? dir : fs['mkdirSync'](dir), ((async () => { const _0x1ee109 = _0x492482; try { console[_0x1ee109(0xd0)](), console['log'](color('[*]\x20Auto\x20Register\x20+\x20Claim\x20Code\x20Grivy', _0x1ee109(0xe3))), console['log'](color(_0x1ee109(0xf0), _0x1ee109(0xe3))), console[_0x1ee109(0x102)](_0x1ee109(0xce)); const _0xcde795 = fs[_0x1ee109(0xfe)](_0x1ee109(0xf1), 'utf-8'), _0x13523e = fs[_0x1ee109(0xfe)]('./src/linkPromo.txt', _0x1ee109(0xe9)); if (_0xcde795 == '') return console[_0x1ee109(0x102)](color(moment()[_0x1ee109(0x111)](_0x1ee109(0xf9)), 'red'), color(_0x1ee109(0xf7), _0x1ee109(0xf4))); if (_0x13523e == '') return console[_0x1ee109(0x102)](color(moment()[_0x1ee109(0x111)](_0x1ee109(0xf9)), 'red'), color('[*]\x20Promo\x20Link\x20not\x20found.\x20please\x20put\x20browser\x20path\x20at\x20./src/linkPromo.txt', _0x1ee109(0xf4))); console[_0x1ee109(0x102)](color(moment()['format'](_0x1ee109(0xf9)), 'yellow'), color(_0x1ee109(0x108))); try { const _0x33d7dc = await puppeteer[_0x1ee109(0xee)]({ 'headless': ![], 'ignoreHTTPSErrors': !![], 'executablePath': _0xcde795, 'args': [_0x1ee109(0x10f), _0x1ee109(0xf8)] }); console[_0x1ee109(0x102)](color(moment()[_0x1ee109(0x111)]('DD/MM/YY\x20HH:mm:ss'), 'yellow'), color(_0x1ee109(0xfb))); const _0x4211d1 = await _0x33d7dc[_0x1ee109(0xe4)](); await _0x4211d1[_0x1ee109(0xfc)](randomUA()), await _0x4211d1[_0x1ee109(0x105)]('https://grivy.app/login', { 'waitUntil': _0x1ee109(0xed), 'timeout': 0x0, 'referer': 'https://grivy.app/' }), await _0x4211d1[_0x1ee109(0xdd)](0x1388), await _0x4211d1[_0x1ee109(0xe7)]({ 'width': 0x556, 'height': 0x2b7 }), console['log'](color(moment()[_0x1ee109(0x111)](_0x1ee109(0xf9)), _0x1ee109(0xf4)), color(_0x1ee109(0xd5))), await _0x4211d1[_0x1ee109(0xcc)](_0x1ee109(0x100)), console[_0x1ee109(0x102)](_0x1ee109(0x101)); const _0x483b22 = readlineSync[_0x1ee109(0xdb)](color(_0x1ee109(0x104), _0x1ee109(0xd8))); await _0x4211d1['waitForSelector']('div.mat-form-field-infix')[_0x1ee109(0xe6)](async () => { const _0x1decdf = _0x1ee109; await _0x4211d1[_0x1decdf(0xfd)]('#mat-input-0', _0x483b22), await _0x4211d1[_0x1decdf(0xcc)](_0x1decdf(0xe5)), console['log'](color(moment()[_0x1decdf(0x111)](_0x1decdf(0xf9)), 'yellow'), color(_0x1decdf(0xc7))); const _0x40bfec = readlineSync[_0x1decdf(0xdb)](color(_0x1decdf(0xd7), _0x1decdf(0xd8))); await _0x4211d1[_0x1decdf(0xfd)](_0x1decdf(0x10a), _0x40bfec), await _0x4211d1[_0x1decdf(0xcb)](_0x1decdf(0xe2))[_0x1decdf(0xe6)](async () => { const _0x24080f = _0x1decdf; await _0x4211d1[_0x24080f(0xcc)](_0x24080f(0xd6)), console[_0x24080f(0x102)](color(moment()['format'](_0x24080f(0xf9)), _0x24080f(0xf4)), color(_0x24080f(0xd1), _0x24080f(0xd8))), await _0x4211d1[_0x24080f(0x105)](_0x13523e, { 'waitUntil': _0x24080f(0xed), 'timeout': 0x0 }), await _0x4211d1[_0x24080f(0xdd)](0x1388); const _0x28b709 = _0x33d7dc[_0x24080f(0x107)](); _0x28b709[_0x24080f(0x109)](), _0x28b709[_0x24080f(0x10b)](_0x24080f(0xeb), [_0x24080f(0x110)]), await _0x4211d1['setGeolocation']({ 'latitude': -7.857797, 'longitude': 110.331431 }), await _0x4211d1[_0x24080f(0xcc)](_0x24080f(0xcf)), await _0x4211d1[_0x24080f(0xcb)](_0x24080f(0x10d))[_0x24080f(0xe6)](async () => { const _0x438a06 = _0x24080f; await _0x4211d1[_0x438a06(0xcc)](_0x438a06(0x10d)), await sleep(0x1388); const _0x12cabd = await _0x4211d1['$'](_0x438a06(0xf5)); await _0x12cabd[_0x438a06(0xcc)](), await sleep(0x3e8); const _0x5b808b = await _0x4211d1['$']('#mat-dialog-0\x20>\x20app-redeem-checkbox-dialog\x20>\x20div\x20>\x20div:nth-child(3)'); await _0x5b808b[_0x438a06(0xcc)](), await _0x4211d1['waitForSelector'](_0x438a06(0xf6))[_0x438a06(0xe6)](async () => { const _0x1ed97a = _0x438a06; await _0x4211d1['click'](_0x1ed97a(0xea)), await _0x4211d1[_0x1ed97a(0xcb)](_0x1ed97a(0xde)); const _0x2946ff = await _0x4211d1['$'](_0x1ed97a(0xde)), _0x3931bf = fs[_0x1ed97a(0xd9)](dir); await _0x2946ff[_0x1ed97a(0xf2)]({ 'path': dir + '/' + (_0x3931bf[_0x1ed97a(0xe8)] + 0x1) + _0x1ed97a(0xca) }), console[_0x1ed97a(0x102)](color(moment()[_0x1ed97a(0x111)](_0x1ed97a(0xf9)), _0x1ed97a(0xf4)), color(_0x1ed97a(0x10e))), console['log'](color(moment()[_0x1ed97a(0x111)](_0x1ed97a(0xf9)), _0x1ed97a(0xf4)), color('[*]\x20Total\x20Voucher\x20=\x20' + _0x3931bf['length'])), await _0x33d7dc[_0x1ed97a(0xdf)](); }); }); }); })[_0x1ee109(0xfa)](_0x3d3738 => console['log'](_0x3d3738)); } catch (_0x4507d4) { console[_0x1ee109(0x102)](_0x4507d4), console['log'](color('[*]\x20Error,\x20Try\x20again', _0x1ee109(0xda))); } } catch (_0x323cbe) { console[_0x1ee109(0x102)](_0x323cbe); } })());